@model Sistema_de_votacion.Models.Position

@{
    string action;
    if (Model== null)
    {
        ViewData["Title"] = "Crear";
        action = "create";
    }
    else
    {
        ViewData["Title"] = "Actulizar";
        action = "Edit";
    }

}

<h1 class="display-4 text-center">@ViewBag.Title posicion politica.</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="@action" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @if (Model != null)
            {
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="IsActive" />
            }

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            @if (Model != null && Model.IsActive == false)
            {
                <label class="form-group form-check">
                    <input asp-for="IsActive" class="form-check-input" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            }
            <div class="form-group">
                <input type="submit" value="@ViewBag.Title" class="btn btn-primary" />
            </div>
            <div>
                <a class="ml-0 text-black-50 nav-link" asp-action="Index">Back to List</a>
            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
